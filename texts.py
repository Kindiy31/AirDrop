from models import *

class UaLanguage:
    def __init__(self):
        self.name = "AirDrop"
        self.token = 'USDT'
        self.language_name = "–£–∫—Ä–∞—ó–Ω—Å—å–∫–∞"

    def home(self):
        return "–ì–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é"

    def back(self):
        return "–ù–∞–∑–∞–¥"

    def profile(self):
        return "–ü—Ä–æ—Ñ—ñ–ª—å"

    def balance(self):
        return "–ë–∞–ª–∞–Ω—Å"

    def my_sales(self):
        return "–ú–æ—ó –ø–æ–∫—É–ø–∫–∏"

    def market(self):
        return "–ú–∞–≥–∞–∑–∏–Ω"

    def website(self):
        return "–ù–∞—à —Å–∞–π—Ç"

    def admin(self):
        return "–ê–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä"

    def choose_language(self):
        return "–û–±–µ—Ä—ñ—Ç—å –º–æ–≤—É / Please choose language"

    def ua(self):
        return 'UA üá∫üá¶'

    def en(self):
        return "EN üá¨üáß"

    def home_menu(self):
        return "–í–∏ –≤ –≥–æ–ª–æ–≤–Ω–æ–º—É –º–µ–Ω—é"

    def new_language_set(self):
        return f"–ù–æ–≤—É –º–æ–≤—É –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {self.language_name}"

    def balance_view(self, user: User):
        return f"–í –¥–∞–Ω–∏–π –º–æ–º–µ–Ω—Ç –≤–∞—à –±–∞–ª–∞–Ω—Å: {user.balance} {self.token}"

    def not_insert(self):
        return "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"

    def deposit(self):
        return "–ü–æ–ø–æ–≤–Ω–∏—Ç–∏"

    def withdraw(self):
        return "–í–∏–≤–µ—Å—Ç–∏"

    def profile_view(self, user: User):
        return f"""–í—ñ—Ç–∞—é, {user.first_name}

–í–∞—à —é–∑–µ—Ä–Ω–µ–π–º: {user.username}
–í–∞—à–∞ –µ–ª.–∞–¥—Ä–µ—Å–∞: {user.email if user.email else self.not_insert()}

–ü—Ä–æ—Ñ—ñ–ª—å —Å—Ç–≤–æ—Ä–µ–Ω–æ: {user.created_at}
"""

    def change_email(self):
        return "–ó–º—ñ–Ω–∏—Ç–∏ –µ–ª.–∞–¥—Ä–µ—Å—É"

    def insert_email(self):
        return "–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –µ–ª.–∞–¥—Ä–µ—Å—É"

    def incorrect_email(self):
        return "–í–≤–µ–¥–µ–Ω–∞ –Ω–µ –∫–æ—Ä–µ–∫—Ç–Ω–∞ –∞–¥—Ä–µ—Å–∞"

    def item_preview(self, item: Item):
        return f"""{item.name}

{item.description}

Price: <b>{item.price} {self.token}</b>"""

    def buy(self):
        return "–ö—É–ø–∏—Ç–∏"

    def preview_purchase(self, item, purchase):
        return f"""–ü–æ–∫—É–ø–∫–∞ ‚Ññ{purchase.id}

<b>{item.name}</b>

–¶—ñ–Ω–∞ –ø–æ–∫—É–ø–∫–∏: {item.price} {self.token}
–î–∞—Ç–∞ –ø–æ–∫—É–ø–∫–∏: {purchase.created_at}
–°—Ç–∞—Ç—É—Å: {purchase.status}"""

    def not_purchases(self):
        return "–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –ø–æ–∫—É–ø–æ–∫"

    def paste_photo_or_text(self):
        return "–í—ñ–¥–ø—Ä–∞–≤—Ç–µ –º–µ–Ω—ñ —Ñ–æ—Ç–æ, –≤—ñ–¥–µ–æ –∞–±–æ —Ç–µ–∫—Å—Ç"

    def admin_menu(self):
        return "–í–∏ –≤ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–º—É –º–µ–Ω—é"

    def mailing(self):
        return "–†–æ–∑—Å–∏–ª–∫–∞"

    def paste_caption(self):
        return "–í–≤–µ–¥—ñ—Ç—å –æ–ø–∏—Å"

    def new_deposit(self, amount):
        return f"–í–∞—à –±–∞–ª–∞–Ω—Å –ø–æ–ø–æ–≤–Ω–µ–Ω–æ –Ω–∞ {amount} {self.token}"

    def insert_amount(self, path):
        if path == "deposit":
            path = "–ü–æ–ø–æ–≤–Ω–µ–Ω–Ω—è"
        else:
            path = "–í–∏–≤–æ–¥—É"
        return f"–í–≤–µ–¥—ñ—Ç—å —Å—É–º—É {path}"

    def only_int(self):
        return "–í–≤–µ–¥—ñ—Ç—å –ª–∏—à–µ —Ü—ñ–ª–µ —á–∏—Å–ª–æ"

    def insert_hash(self):
        return "–í–≤–µ–¥—ñ—Ç—å —Ö–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó"

    def insert_address(self):
        return "–í–≤–µ–¥—ñ—Ç—å –∞–¥—Ä–µ—Å—É –Ω–∞ –≤–∏–≤—ñ–¥"

    def transaction_modifided_before(self):
        return "–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è –≤–∂–µ –æ–±—Ä–æ–±–ª–µ–Ω–∞"

    def modifided_transaction(self, transaction: Transaction):
        msg = f"""–í–∞—à–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è ‚Ññ{transaction.id} {"–Ω–µ" if transaction.status == 3 else ''} –ø—Ä–∏–π–Ω—è—Ç–∞"""
        if transaction.transaction_type == 1:
            if transaction.status == 3:
                msg += f"""
{transaction.amount} {self.token} –±—É–ª–∏ –ø–æ–≤–µ—Ä–Ω—É—Ç—ñ –Ω–∞ –±–∞–ª–∞–Ω—Å"""
        elif transaction.transaction_type == 0:
            if transaction.status == 2:
                msg += f"""
{transaction.amount} {self.token} –±—É–ª–∏ –∑–∞—Ä–∞—Ö–æ–≤–∞–Ω—ñ –Ω–∞ –±–∞–ª–∞–Ω—Å"""
        return msg


    def transaction_created(self, transaction: Transaction, is_admin=False):
        if is_admin:
            msg = f"""–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—è ‚Ññ {transaction.id}

–°—É–º–∞: {transaction.amount}

"""
            if transaction.transaction_type == 0:
                msg += f"""–¢–∏–ø: –î–µ–ø–æ–∑–∏—Ç
–•–µ—à: {transaction.transaction_hash}
"""
            elif transaction.transaction_type == 1:
                msg += f"""–¢–∏–ø: –í–∏–≤—ñ–¥
–ê–¥—Ä–µ—Å–∞: {transaction.address}
"""
            elif transaction.transaction_type == 2:
                msg += f"""–¢–∏–ø: –ü–æ–∫—É–ø–∫–∞
ID –ø—Ä–µ–¥–º–µ—Ç—É: {transaction.item_id}
"""
            msg += f"""
–î–∞—Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è: {transaction.created_at}
–°—Ç–∞—Ç—É—Å: {"–°—Ç–≤–æ—Ä–µ–Ω–æ" if transaction.status == 1 else "–ü—Ä–∏–π–Ω—è—Ç–æ" if transaction.status == 2 else "–í—ñ–¥—Ö–∏–ª–µ–Ω–æ" if transaction.status == 3 else "–ù–µ–≤—ñ–¥–æ–º–æ"}"""
            return msg
        return f"""–¢—Ä–∞–Ω–∑–∞–∫—Ü—ñ—é ‚Ññ{transaction.id} —Å—Ç–≤–æ—Ä–µ–Ω–æ!

–û—á—ñ–∫—É–π—Ç–µ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–∞"""

    def confirm(self):
        return "–ü—Ä–∏–π–Ω—è—Ç–∏"

    def cancel(self):
        return "–í—ñ–¥—Ö–∏–ª–∏—Ç–∏"


class EnLanguage(UaLanguage):
    def __init__(self):
        super().__init__()
        self.language_name = "English"

    def home(self):
        return "Home menu"

    def back(self):
        return "Back"

    def profile(self):
        return "Profile"

    def balance(self):
        return "Balance"

    def my_sales(self):
        return "My purchases"

    def market(self):
        return "Market"

    def website(self):
        return "Our website"

    def admin(self):
        return "Admin"

    def choose_language(self):
        return "Choose language"

    def ua(self):
        return 'UA üá∫üá¶'

    def en(self):
        return "EN üá¨üáß"

    def home_menu(self):
        return "You are in the main menu"

    def new_language_set(self):
        return f"New language set: {self.language_name}"

    def balance_view(self, user: User):
        return f"Your current balance: {user.balance} {self.token}"

    def not_insert(self):
        return "Not specified"

    def deposit(self):
        return "Deposit"

    def withdraw(self):
        return "Withdraw"

    def change_email(self):
        return "Change email"

    def insert_email(self):
        return "Enter your email"

    def incorrect_email(self):
        return "Incorrect email address"

    def item_preview(self, item: Item):
        return f"""{item.name}

{item.description}

Price: <b>{item.price} {self.token}</b>"""

    def buy(self):
        return "Buy"

    def preview_purchase(self, item, purchase):
        return f"""Purchase ‚Ññ{purchase.id}

<b>{item.name}</b>

Purchase price: {item.price} {self.token}
Purchase date: {purchase.created_at}
Status: {purchase.status}"""

    def not_purchases(self):
        return "You have no purchases yet"

    def paste_photo_or_text(self):
        return "Send me a photo, video or text"

    def admin_menu(self):
        return "You are in the admin menu"

    def mailing(self):
        return "Mailing"

    def paste_caption(self):
        return "Enter a caption"

    def new_deposit(self, amount):
        return f"Your balance has been replenished by {amount} {self.token}"

    def insert_amount(self, path):
        if path == "deposit":
            path = "Deposit"
        else:
            path = "Withdrawal"
        return f"Enter the amount of {path}"

    def only_int(self):
        return "Enter only an integer"

    def insert_hash(self):
        return "Enter the transaction hash"

    def insert_address(self):
        return "Enter the withdrawal address"

    def transaction_modifided_before(self):
        return "The transaction has already been processed"

    def modifided_transaction(self, transaction: Transaction):
        msg = f"""Your transaction ‚Ññ{transaction.id} {"not" if transaction.status == 3 else ''} accepted"""
        if transaction.transaction_type == 1:
            if transaction.status == 3:
                msg += f"""
{transaction.amount} {self.token} were returned to the balance"""
        elif transaction.transaction_type == 0:
            if transaction.status == 2:
                msg += f"""
{transaction.amount} {self.token} were credited to the balance"""
        return msg

    def transaction_created(self, transaction: Transaction, is_admin=False):
        if is_admin:
            msg = f"""Transaction ‚Ññ {transaction.id}

Amount: {transaction.amount}

"""
            if transaction.transaction_type == 0:
                msg += f"""Type: Deposit
Hash: {transaction.transaction_hash}
"""
            elif transaction.transaction_type == 1:
                msg += f"""Type: Withdrawal
Address: {transaction.address}
"""
            elif transaction.transaction_type == 2:
                msg += f"""Type: Purchase
Item ID: {transaction.item_id}
"""
            msg += f"""
Creation date: {transaction.created_at}
Status: {"Created" if transaction.status == 1 else "Accepted" if transaction.status == 2 else "Rejected" if transaction.status == 3 else "Unknown"}"""
            return msg
        return f"""Transaction ‚Ññ{transaction.id} created!

Waiting for administrator confirmation"""

    def confirm(self):
        return "Accept"

    def cancel(self):
        return "Reject"



def get_language(language=1):
    if language == 1:
        language = UaLanguage()
    elif language == 2:
        language = EnLanguage()
    else:
        language = UaLanguage()
    return language
